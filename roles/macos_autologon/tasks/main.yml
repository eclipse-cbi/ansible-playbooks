# To run UI tests on macOS, macOS' UI server needs to be running. The UI
# server is only active after a user has logged into their account and cannot
# be started on demand like Xvfb. The only option is to enable auto logon for
# the user running the tests which is "jenkins" in our case. Xvfb cannot be
# used because macOS uses Quartz to render its UI, not X.
#
# The security implications of enabling auto logon are as follows:
#
# * Anybody with physical access does not have to authenticate to perform actions
#   as "jenkins" (only if macOS is running on a physical machine).
# * Any kind of remote login (screen sharing, SSH) needs the same authentication
#   as usual (except it was disabled separately, of course).
#
# If you want to minimize the security risks associated with auto logon,
# run the unlocked macOS in a Parallels VM (other types of VM might support
# this, too) and configure Parallels to automatically open a window when the
# VM starts. Then, the host machine can remain locked all the time an protect
# the VMs from direct physical access.
#
# Apart from running the playbook, some manual configuration is needed: In
# "System Preferences", go to "Security" > "Privacy" and click on
# "Accessibility". Add whatever program runs the UI test (at AdoptOpenJDK, it's
# "sshd-keygen-wrapper") and allow it to control the computer.
---
- name: Disable Screen Saver
  become: true
  osx_defaults:
    domain: com.apple.screensaver
    key: idleTime
    type: int
    value: 0
    host: "currentHost"
    state: present

- name: Disable Screen Lock
  become: true
  shell: sysadminctl -screenLock off -password "{{ lookup('passwordstore', 'IT/CBI/agents/{{ cbi_provider }}/{{ inventory_hostname }}/users/{{ ansible_user }}/password directory={{ password_store.it }}') }}"
  changed_when: false

- name: Enable Automatic Login after Startup (1)
  become: true
  osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: autoLoginUser
    type: string
    value: "{{ jenkins_agent.username }}"
    state: present

- name: Enable Automatic Login after Startup (2)
  become: true
  ansible.builtin.script: ./scripts/kcpassword.sh "{{ lookup('passwordstore', 'bots/{{ project.full_name }}/agents/{{ cbi_provider }}/{{ inventory_hostname }}/password directory={{ password_store.cbi }}') }}"

- name: Query Computer Sleep Status
  become: true
  shell: systemsetup -getcomputersleep
  register: computer_sleep_status_result
  changed_when: false

- name: Disable Computer Sleep
  become: true
  shell: systemsetup -setcomputersleep Never
    - "'Never' not in computer_sleep_status_result.stdout"

- name: Query Display Sleep Status
  become: true
  shell: systemsetup -getdisplaysleep
  register: display_sleep_status_result
  changed_when: false

- name: Disable Display Sleep
  become: true
  shell: systemsetup -setdisplaysleep Never
  when:
    - "'Never' not in display_sleep_status_result.stdout"
